% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Individualized-Dynamic-Latent-Factor-Model.R
\name{IDLFM}
\alias{IDLFM}
\title{Individualized Dynamic Latent Factor Model}
\usage{
IDLFM(
  X,
  Y,
  n_patients,
  n_var,
  T,
  idx_x,
  idx_y,
  rank,
  k,
  N,
  lambda1 = 1,
  lambda2 = 1,
  Niter = 100,
  alpha = 0.001,
  ebs = 1e-04,
  l = 1
)
}
\arguments{
\item{X}{a sparse matrix for predictor variables}

\item{Y}{a sparse matrix for response variables}

\item{n_patients}{the number of patients}

\item{n_var}{the number of X variables}

\item{T}{maximum time}

\item{idx_x}{indices for the X data, a sparse matrix}

\item{idx_y}{indices for the Y data, a sparse matrix}

\item{rank}{rank for the random matrices}

\item{k}{spline smoothness}

\item{N}{number of knots in the spline}

\item{lambda1}{regularization parameter for fused lasso, with the default value 1}

\item{lambda2}{regularization parameter for total variation, with the default value 1}

\item{Niter}{number of iterations for the Adam optimizer, with the default value 100}

\item{alpha}{learning rate for the Adam optimizer, with the default value 0.001}

\item{ebs}{convergence threshold, with the default value 0.0001}

\item{l}{regularization parameter, with the default value 1}
}
\value{
A list is returned, containing the model weights, factor matrix, spline knots, predicted X and Y.
}
\description{
This function implements the individualized dynamic latent factor model.
}
\examples{
library(splines)
#if (!require("BiocManager", quietly = TRUE))
#install.packages("BiocManager")
#BiocManager::install("SparseArray")
library(SparseArray)

I <- 3
J <- 10
T <- 100
R <- 3
k <- 3
N <- 300
idx_x <- randomSparseArray(c(I, J, T), density=0.8)
idx_x <- array(runif(length(idx_x), 0, 1), dim = dim(idx_x))
idx_y_train <- randomSparseArray(c(I, 1, T), density=0.2)
idx_y_train <- array(runif(length(idx_y_train), 0, 1), dim = dim(idx_y_train))
idx_y_test <- randomSparseArray(c(I, 1, T), density=0.2)
idx_y_test <- array(runif(length(idx_y_test), 0, 1), dim = dim(idx_y_test))
data <- generate_data(I, J, T, idx_x, idx_y_train, R, k, N)
output_x <- data[[1]]
output_y <- data[[2]]
knots <- data[[3]]
weights <- data[[4]]
Fx <- data[[5]]
Fy <- data[[6]]
IDLFM(X = output_x, Y = output_y, n_patients = I, n_var = J, T = T,
idx_x = idx_x, idx_y = idx_y_train, rank = R, k = k, N = N)
}
\references{
Zhang, J., F. Xue, Q. Xu, J. Lee, and A. Qu. "Individualized dynamic latent factor model for multi-resolutional data with application to mobile health." Biometrika (2024): asae015.
}
